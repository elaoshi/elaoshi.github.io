<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>ELaoshi Tech Projects - Tech</title><link href="https://www.iamericliu.com/" rel="alternate"></link><link href="https://www.iamericliu.com/feeds/tech.atom.xml" rel="self"></link><id>https://www.iamericliu.com/</id><updated>2020-04-15T11:40:00+10:00</updated><subtitle>Full Stack Developer</subtitle><entry><title>Code review tool - Gerrit - docker</title><link href="https://www.iamericliu.com/code-review-gerrit-how-to-use.html" rel="alternate"></link><published>2020-04-15T11:40:00+10:00</published><updated>2020-04-15T11:40:00+10:00</updated><author><name>ELaoshi</name></author><id>tag:www.iamericliu.com,2020-04-15:/code-review-gerrit-how-to-use.html</id><summary type="html">&lt;h1&gt;Gerrit is a git server.&lt;/h1&gt;
&lt;p&gt;The easily way to use it is by docker. &lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker run -ti -p 8080:8080 -p 29418:29418 gerritcodereview/gerrit&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;Gerrit does not provide&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Code Browsing&lt;/li&gt;
&lt;li&gt;Code Search&lt;/li&gt;
&lt;li&gt;Project Wiki&lt;/li&gt;
&lt;li&gt;Issue Tracking&lt;/li&gt;
&lt;li&gt;Continuous Builds&lt;/li&gt;
&lt;li&gt;Code Analyzers&lt;/li&gt;
&lt;li&gt;Style Checkers&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;After docker started, access UI and create …&lt;/h1&gt;</summary><content type="html">&lt;h1&gt;Gerrit is a git server.&lt;/h1&gt;
&lt;p&gt;The easily way to use it is by docker. &lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker run -ti -p 8080:8080 -p 29418:29418 gerritcodereview/gerrit&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;Gerrit does not provide&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Code Browsing&lt;/li&gt;
&lt;li&gt;Code Search&lt;/li&gt;
&lt;li&gt;Project Wiki&lt;/li&gt;
&lt;li&gt;Issue Tracking&lt;/li&gt;
&lt;li&gt;Continuous Builds&lt;/li&gt;
&lt;li&gt;Code Analyzers&lt;/li&gt;
&lt;li&gt;Style Checkers&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;After docker started, access UI and create repository&lt;/h1&gt;
&lt;p&gt;Open localhost:8080&lt;/p&gt;
&lt;p&gt;Then, open "BROWSE" menu , on the right top side , we can click "CREATE NEW" to create a repository&lt;/p&gt;
&lt;h1&gt;Next create access user passward&lt;/h1&gt;
&lt;p&gt;Click avatar icon, click Setting to go to the setting page. &lt;/p&gt;
&lt;p&gt;Scroll down to the "HTTP Credentials" section , generate password for my current account in gerrit.&lt;/p&gt;
&lt;p&gt;Copy the &lt;strong&gt;password&lt;/strong&gt; for my furture git command line push usage.&lt;/p&gt;
&lt;h1&gt;git clone&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;cd ~/projects&lt;/span&gt;
&lt;span class="err"&gt;git clone &amp;quot;http://admin@localhost:8080/a/hello-gerrit&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;add commit and push using my previous passward&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;git commit -a -m &amp;#39;hello&amp;#39;&lt;/span&gt;
&lt;span class="err"&gt;git push origin HEAD:refs/for/master&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Go to web ui&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;see&lt;/span&gt; &lt;span class="n"&gt;our&lt;/span&gt; &lt;span class="n"&gt;commit&lt;/span&gt;


&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Gerrit&lt;/span&gt; &lt;span class="n"&gt;UI&lt;/span&gt;&lt;span class="p"&gt;]({&lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;CodeReview&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gerrit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ui&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Fix issue&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ERROR&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;commit&lt;/span&gt; &lt;span class="mi"&gt;69&lt;/span&gt;&lt;span class="n"&gt;a368f&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="n"&gt;Change&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="n"&gt;footer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then we need to run :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;curl -Lo .git/hooks/commit-msg http://localhost:8080/tools/hooks/commit-msg&lt;/span&gt;
&lt;span class="err"&gt;chmod u+x .git/hooks/commit-msg&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After that : &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;``git commit --amend --no-edit``&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then we can commit again : &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;git commit --amend --no-edit&lt;/span&gt;
&lt;span class="err"&gt;git push origin HEAD:refs/for/master&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After that we can see it works:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;remote&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;SUCCESS&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;p&gt;Reference:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/presentation/d/1C73UgQdzZDw0gzpaEqIC6SPujZJhqamyqO1XOHjH-uk/edit#slide=id.g4d6c16487b_1_172"&gt;Article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gerrit-review.googlesource.com/Documentation/intro-user.html"&gt;Documents&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tech"></category><category term="CodeReview"></category><category term="Gerrit"></category><category term="OpenSource"></category></entry><entry><title>Code review checklist</title><link href="https://www.iamericliu.com/code-review-checklist.html" rel="alternate"></link><published>2020-04-15T09:28:00+10:00</published><updated>2020-04-15T09:28:00+10:00</updated><author><name>ELaoshi</name></author><id>tag:www.iamericliu.com,2020-04-15:/code-review-checklist.html</id><summary type="html">&lt;h1&gt;Code Review Checklist&lt;/h1&gt;
&lt;h2&gt;General&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Does the code work? Does it perform its intended function, the logic is correct etc.&lt;/li&gt;
&lt;li&gt;Is all the code easily understood?&lt;/li&gt;
&lt;li&gt;Does it conform to your agreed coding conventions? These will usually cover location of braces, variable and function names, line length, indentations, formatting, and comments …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h1&gt;Code Review Checklist&lt;/h1&gt;
&lt;h2&gt;General&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Does the code work? Does it perform its intended function, the logic is correct etc.&lt;/li&gt;
&lt;li&gt;Is all the code easily understood?&lt;/li&gt;
&lt;li&gt;Does it conform to your agreed coding conventions? These will usually cover location of braces, variable and function names, line length, indentations, formatting, and comments.&lt;/li&gt;
&lt;li&gt;Is there any redundant or duplicate code?&lt;/li&gt;
&lt;li&gt;Is the code as modular as possible?&lt;/li&gt;
&lt;li&gt;Can any global variables be replaced?&lt;/li&gt;
&lt;li&gt;Is there any commented out code?&lt;/li&gt;
&lt;li&gt;Do loops have a set length and correct termination conditions?&lt;/li&gt;
&lt;li&gt;Do the names used in the program convey intent?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Performance&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Are there any obvious optimizations that will improve performance?&lt;/li&gt;
&lt;li&gt;Can any of the code be replaced with library or built-in functions?&lt;/li&gt;
&lt;li&gt;Can any logging or debugging code be removed?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Security&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Are all data inputs checked (for the correct type, length, format, and range) and encoded?&lt;/li&gt;
&lt;li&gt;Where third-party utilities are used, are returning errors being caught?&lt;/li&gt;
&lt;li&gt;Are output values checked and encoded?&lt;/li&gt;
&lt;li&gt;Are invalid parameter values handled?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Do comments exist and describe the intent of the code?&lt;/li&gt;
&lt;li&gt;Are all functions commented?&lt;/li&gt;
&lt;li&gt;Is any unusual behavior or edge-case handling described?&lt;/li&gt;
&lt;li&gt;Is the use and function of third-party libraries documented?&lt;/li&gt;
&lt;li&gt;Are data structures and units of measurement explained?&lt;/li&gt;
&lt;li&gt;Is there any incomplete code? If so, should it be removed or flagged with a suitable marker like ‘TODO’?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Testing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Is the code testable? The code should be structured so that it doesn’t add too many or hide dependencies, is unable to initialize objects, test frameworks can use methods etc.&lt;/li&gt;
&lt;li&gt;Do tests exist, and are they comprehensive?&lt;/li&gt;
&lt;li&gt;Do unit tests actually test that the code is performing the intended functionality?&lt;/li&gt;
&lt;li&gt;Could any test code be replaced with the use of an existing API?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Tools for Code Reviews&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The first step while assessing the code quality of the entire project is through a static code analysis tool. Use the tools (based on technology) such as SonarQube(Free), NDepend, FxCop(free for .Net), TFS code analysis rules. There is a myth that static code analysis tools are only for managers.&lt;/li&gt;
&lt;li&gt;Use plug-ins such as Resharper, which suggests the best practices in Visual studio.&lt;/li&gt;
&lt;li&gt;To track the code review comments use the tools like Crucible, Bitbucket and TFS code review process.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1&gt;Tools&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://archive.codeplex.com/?p=TFSCodeReviewFlow"&gt;TFSCodeReviewFlow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sonarqube.org/downloads/"&gt;SonarQube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://review.gerrithub.io/static/intro.html"&gt;GerritHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Types of Code Reviews&lt;/h2&gt;
&lt;p&gt;There are two primary types of code reviews used today:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Formal reviews are more robust and structured. These are best suited for situations where human lives or national security is at stake if something goes wrong.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lightweight reviews happen more quickly. These use methods such as over-the-shoulder, email-pass-around, pair programming, and tool-assisted.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tech"></category><category term="CodeReview"></category><category term="Checklist"></category></entry><entry><title>Mac using tree command to list files in folder</title><link href="https://www.iamericliu.com/mac-tree-list-files-in-folder.html" rel="alternate"></link><published>2020-04-14T10:13:00+10:00</published><updated>2020-04-14T10:13:00+10:00</updated><author><name>ELaoshi</name></author><id>tag:www.iamericliu.com,2020-04-14:/mac-tree-list-files-in-folder.html</id><summary type="html">&lt;h1&gt;简述&lt;/h1&gt;
&lt;p&gt;Mac 下默认是没有 tree 命令, 我在写某篇笔记的时候需要列出目录下文件结构
可以通过 Homebrew 安装 tree 这款软件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt; brew install tree&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then we can use &lt;code&gt;tree -n&lt;/code&gt; to print all files in the current folder . The belowing is an example.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;
&lt;span class="err"&gt;├── components&lt;/span&gt;
&lt;span class="err"&gt;│   ├── Cart&lt;/span&gt;
&lt;span class="err"&gt;│   │   ├── Cart.js&lt;/span&gt;
&lt;span class="err"&gt;│   ├── Category&lt;/span&gt;
&lt;span class="err"&gt;│   │   ├── ImageSlider.js&lt;/span&gt;
&lt;span class="err"&gt;│   ├── Home&lt;/span&gt;
&lt;span class="err"&gt;│   │   ├── FeatureProducts.js&lt;/span&gt;
&lt;span class="err"&gt;│   │   ├── OtherProducts.js&lt;/span&gt;
&lt;span class="err"&gt;│   │   └── ProductItem.js&lt;/span&gt;
&lt;span class="err"&gt;│   ├── Menu&lt;/span&gt;
&lt;span class="err"&gt;│   │   ├── MenuV1.js …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h1&gt;简述&lt;/h1&gt;
&lt;p&gt;Mac 下默认是没有 tree 命令, 我在写某篇笔记的时候需要列出目录下文件结构
可以通过 Homebrew 安装 tree 这款软件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt; brew install tree&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then we can use &lt;code&gt;tree -n&lt;/code&gt; to print all files in the current folder . The belowing is an example.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;
&lt;span class="err"&gt;├── components&lt;/span&gt;
&lt;span class="err"&gt;│   ├── Cart&lt;/span&gt;
&lt;span class="err"&gt;│   │   ├── Cart.js&lt;/span&gt;
&lt;span class="err"&gt;│   ├── Category&lt;/span&gt;
&lt;span class="err"&gt;│   │   ├── ImageSlider.js&lt;/span&gt;
&lt;span class="err"&gt;│   ├── Home&lt;/span&gt;
&lt;span class="err"&gt;│   │   ├── FeatureProducts.js&lt;/span&gt;
&lt;span class="err"&gt;│   │   ├── OtherProducts.js&lt;/span&gt;
&lt;span class="err"&gt;│   │   └── ProductItem.js&lt;/span&gt;
&lt;span class="err"&gt;│   ├── Menu&lt;/span&gt;
&lt;span class="err"&gt;│   │   ├── MenuV1.js&lt;/span&gt;
&lt;span class="err"&gt;│   │   └── styleV3.scss&lt;/span&gt;
&lt;span class="err"&gt;│   ├── ProductList&lt;/span&gt;
&lt;span class="err"&gt;│   │   ├── ProductsGrid.js&lt;/span&gt;
&lt;span class="err"&gt;│   │   └── SearchResultProductsGrid.js&lt;/span&gt;
&lt;span class="err"&gt;│   ├── Products&lt;/span&gt;
&lt;span class="err"&gt;│   │   ├── FeatureImage.js&lt;/span&gt;
&lt;span class="err"&gt;│   │   ├── ImageSlider.js&lt;/span&gt;
&lt;span class="err"&gt;│   │   ├── ProductBuyBox.js&lt;/span&gt;
&lt;span class="err"&gt;│   │   ├── ProductTop.js&lt;/span&gt;
&lt;span class="err"&gt;│   │   ├── actions.js&lt;/span&gt;
&lt;span class="err"&gt;│   │   └── reducer.js&lt;/span&gt;
&lt;span class="err"&gt;│   ├── ShippingForm&lt;/span&gt;
&lt;span class="err"&gt;│   │   └── ShippingForm.js&lt;/span&gt;
&lt;span class="err"&gt;│   ├── addToCart&lt;/span&gt;
&lt;span class="err"&gt;│   │   ├── addToCart.js&lt;/span&gt;
&lt;span class="err"&gt;│   │   ├── addToCartButton.js&lt;/span&gt;
&lt;span class="err"&gt;│   │   ├── addToCartButtonPaypal.js&lt;/span&gt;
&lt;span class="err"&gt;│   │   └── addtocart.scss&lt;/span&gt;
&lt;span class="err"&gt;│   ├── header.js&lt;/span&gt;
&lt;span class="err"&gt;│   ├── image.js&lt;/span&gt;
&lt;span class="err"&gt;│   ├── layout.css&lt;/span&gt;
&lt;span class="err"&gt;│   ├── layout.js&lt;/span&gt;
&lt;span class="err"&gt;│   └── seo.js&lt;/span&gt;
&lt;span class="err"&gt;├── images&lt;/span&gt;
&lt;span class="err"&gt;│   ├── credit_debit_card_bank_pay_payment.png&lt;/span&gt;
&lt;span class="err"&gt;│   ├── gatsby-astronaut.png&lt;/span&gt;
&lt;span class="err"&gt;├── pages&lt;/span&gt;
&lt;span class="err"&gt;│   ├── 404.js&lt;/span&gt;
&lt;span class="err"&gt;│   ├── contactus.js&lt;/span&gt;
&lt;span class="err"&gt;│   ├── index.js&lt;/span&gt;
&lt;span class="err"&gt;├── state&lt;/span&gt;
&lt;span class="err"&gt;│   ├── configureStore.js&lt;/span&gt;
&lt;span class="err"&gt;│   └── history.js&lt;/span&gt;
&lt;span class="err"&gt;├── styles&lt;/span&gt;
&lt;span class="err"&gt;│   └── theme1.css&lt;/span&gt;
&lt;span class="err"&gt;└── templates&lt;/span&gt;
&lt;span class="err"&gt;    ├── BlogPost.js&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;tree 中文乱码解决&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;tree -N + 目录&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;-N Print non-printable characters as is instead of as escaped octal numbers.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category><category term="Tree"></category><category term="Mac"></category></entry><entry><title>Cons in Gatsby</title><link href="https://www.iamericliu.com/can-not-integreated-with-google-translate-gatsby.md.html" rel="alternate"></link><published>2020-04-13T15:45:00+10:00</published><updated>2020-04-13T15:45:00+10:00</updated><author><name>ELaoshi</name></author><id>tag:www.iamericliu.com,2020-04-13:/can-not-integreated-with-google-translate-gatsby.md.html</id><summary type="html">&lt;p&gt;After tried several methods, I still can't integrated google translation with gatsby.&lt;/p&gt;
&lt;p&gt;If anyone know how to do it like my blog done, please let me know, Thanks!&lt;/p&gt;
&lt;p&gt;All I have tried:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;import css in gatsby-browser&lt;/li&gt;
&lt;li&gt;excluded jQuery in onCreateWebpackConfig function ( gatsby-node.js )&lt;/li&gt;
&lt;li&gt;insert translation js in gatsby-ssr.js &lt;/li&gt;
&lt;li&gt;add …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;After tried several methods, I still can't integrated google translation with gatsby.&lt;/p&gt;
&lt;p&gt;If anyone know how to do it like my blog done, please let me know, Thanks!&lt;/p&gt;
&lt;p&gt;All I have tried:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;import css in gatsby-browser&lt;/li&gt;
&lt;li&gt;excluded jQuery in onCreateWebpackConfig function ( gatsby-node.js )&lt;/li&gt;
&lt;li&gt;insert translation js in gatsby-ssr.js &lt;/li&gt;
&lt;li&gt;add script inside &lt;Helmet&gt; in a special page&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All above not work.&lt;/p&gt;
&lt;p&gt;But yes, I can add jQuery in my site now.&lt;/p&gt;</content><category term="Tech"></category><category term="Gatsby"></category></entry><entry><title>Does StaticQuery can accept variables in Gatsby?</title><link href="https://www.iamericliu.com/does-staticquery-can-accept-variables-in-gatsby.html" rel="alternate"></link><published>2020-04-13T09:57:00+10:00</published><updated>2020-04-13T09:57:00+10:00</updated><author><name>ELaoshi</name></author><id>tag:www.iamericliu.com,2020-04-13:/does-staticquery-can-accept-variables-in-gatsby.html</id><summary type="html">&lt;p&gt;The question is &lt;strong&gt;No&lt;/strong&gt;. It's a static query.&lt;/p&gt;
&lt;p&gt;In the offical page, it has this following paragrah:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;How&lt;/span&gt; &lt;span class="n"&gt;StaticQuery&lt;/span&gt; &lt;span class="n"&gt;differs&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt;

&lt;span class="n"&gt;StaticQuery&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;things&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;including&lt;/span&gt; &lt;span class="n"&gt;fragments&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="n"&gt;differences&lt;/span&gt; &lt;span class="k"&gt;are&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="n"&gt;queries&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;accept&lt;/span&gt; &lt;span class="n"&gt;variables&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;via&lt;/span&gt; &lt;span class="n"&gt;pageContext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="k"&gt;only …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;The question is &lt;strong&gt;No&lt;/strong&gt;. It's a static query.&lt;/p&gt;
&lt;p&gt;In the offical page, it has this following paragrah:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;How&lt;/span&gt; &lt;span class="n"&gt;StaticQuery&lt;/span&gt; &lt;span class="n"&gt;differs&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt;

&lt;span class="n"&gt;StaticQuery&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;things&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;including&lt;/span&gt; &lt;span class="n"&gt;fragments&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="n"&gt;differences&lt;/span&gt; &lt;span class="k"&gt;are&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="n"&gt;queries&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;accept&lt;/span&gt; &lt;span class="n"&gt;variables&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;via&lt;/span&gt; &lt;span class="n"&gt;pageContext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="k"&gt;only&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;added&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;

&lt;span class="n"&gt;StaticQuery&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;does&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="n"&gt;accept&lt;/span&gt; &lt;span class="n"&gt;variables&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hence&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;used&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="k"&gt;any&lt;/span&gt; &lt;span class="n"&gt;component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;including&lt;/span&gt; &lt;span class="n"&gt;pages&lt;/span&gt;
&lt;span class="n"&gt;StaticQuery&lt;/span&gt; &lt;span class="n"&gt;does&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="k"&gt;work&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;raw&lt;/span&gt; &lt;span class="n"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;createElement&lt;/span&gt; &lt;span class="n"&gt;calls&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;please&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;JSX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;StaticQuery&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So for we, I just pass variables in createPage context and it has a good structure.&lt;/p&gt;
&lt;p&gt;We need to design well for this case in Gatsby site.&lt;/p&gt;</content><category term="Tech"></category><category term="Gatsby"></category><category term="StaticQuery"></category></entry><entry><title>Recommender system useful packages</title><link href="https://www.iamericliu.com/some-useful-packages-to-run-dataset.html" rel="alternate"></link><published>2020-04-12T15:20:00+10:00</published><updated>2020-04-12T15:20:00+10:00</updated><author><name>ELaoshi</name></author><id>tag:www.iamericliu.com,2020-04-12:/some-useful-packages-to-run-dataset.html</id><summary type="html">&lt;h1&gt;&lt;a href="https://github.com/caserec/CaseRecommender"&gt;caserecommender&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Case Recommender is a Python implementation of a number of popular recommendation algorithms for both implicit and explicit feedback. The framework aims to provide a rich set of components from which you can construct a customized recommender system from a set of algorithms. Case Recommender has different types of …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;&lt;a href="https://github.com/caserec/CaseRecommender"&gt;caserecommender&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Case Recommender is a Python implementation of a number of popular recommendation algorithms for both implicit and explicit feedback. The framework aims to provide a rich set of components from which you can construct a customized recommender system from a set of algorithms. Case Recommender has different types of item recommendation and rating prediction approaches, and different metrics validation and evaluation.&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a href="https://github.com/dreamfantacy/faiss/blob/master/faiss_use.md"&gt;Faiss&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Faiss: A library for efficient similarity search &lt;a href="https://engineering.fb.com/data-infrastructure/faiss-a-library-for-efficient-similarity-search/"&gt;Facebook&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;faiss是为稠密向量提供高效相似度搜索和聚类的框架。由Facebook AI Research研发。&lt;/p&gt;
&lt;hr&gt;</content><category term="Tech"></category><category term="packages"></category><category term="recommender"></category></entry><entry><title>Recommender system datasets</title><link href="https://www.iamericliu.com/recommender-system-datasets.html" rel="alternate"></link><published>2020-04-12T12:20:00+10:00</published><updated>2020-04-12T12:20:00+10:00</updated><author><name>ELaoshi</name></author><id>tag:www.iamericliu.com,2020-04-12:/recommender-system-datasets.html</id><summary type="html">&lt;h1&gt;a good start from recommender system datasets&lt;/h1&gt;
&lt;h1&gt;Book&lt;/h1&gt;
&lt;p&gt;· 1. Book Crossing&lt;/p&gt;
&lt;p&gt;BookCrossing（BX）数据集由Cai-Nicolas花了的4周（2004年8月/ 9月）从Book-Crossing社区中爬取得到的。&lt;/p&gt;
&lt;p&gt;· 下载链接：http://www2.informatik.uni-freiburg.de/~cziegler/BX/&lt;/p&gt;
&lt;h1&gt;Ecommerce 电子商务&lt;/h1&gt;
&lt;p&gt;· 2. Amazon&lt;/p&gt;
&lt;p&gt;该数据集包括自1996年5月至2014年7月，来自亚马逊上的1.428亿产品的评论和metadata。&lt;/p&gt;
&lt;p&gt;· 下载链接：http://jmcauley.ucsd.edu/data/amazon/&lt;/p&gt;
&lt;p&gt;· 3. Retailrocket 推荐系统数据集&lt;/p&gt;
&lt;p&gt;该数据集由三个文件组成：一个行为数据集（events.csv），一个属性数据集（item_properties.сsv）和一个类目树数据集 …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;a good start from recommender system datasets&lt;/h1&gt;
&lt;h1&gt;Book&lt;/h1&gt;
&lt;p&gt;· 1. Book Crossing&lt;/p&gt;
&lt;p&gt;BookCrossing（BX）数据集由Cai-Nicolas花了的4周（2004年8月/ 9月）从Book-Crossing社区中爬取得到的。&lt;/p&gt;
&lt;p&gt;· 下载链接：http://www2.informatik.uni-freiburg.de/~cziegler/BX/&lt;/p&gt;
&lt;h1&gt;Ecommerce 电子商务&lt;/h1&gt;
&lt;p&gt;· 2. Amazon&lt;/p&gt;
&lt;p&gt;该数据集包括自1996年5月至2014年7月，来自亚马逊上的1.428亿产品的评论和metadata。&lt;/p&gt;
&lt;p&gt;· 下载链接：http://jmcauley.ucsd.edu/data/amazon/&lt;/p&gt;
&lt;p&gt;· 3. Retailrocket 推荐系统数据集&lt;/p&gt;
&lt;p&gt;该数据集由三个文件组成：一个行为数据集（events.csv），一个属性数据集（item_properties.сsv）和一个类目树数据集（category_tree.сsv）。该数据来自现实世界的电子商务网站。&lt;/p&gt;
&lt;p&gt;· 下载链接：https://www.kaggle.com/retailrocket/ecommerce-dataset&lt;/p&gt;
&lt;h1&gt;Music 音乐&lt;/h1&gt;
&lt;p&gt;· 4. Amazon Music&lt;/p&gt;
&lt;p&gt;该数字音乐数据集包含来自亚马逊的评论和元数据&lt;/p&gt;
&lt;p&gt;· 下载链接：http://jmcauley.ucsd.edu/data/amazon/&lt;/p&gt;
&lt;p&gt;· 5. Yahoo Music&lt;/p&gt;
&lt;p&gt;该数据集是一个快照，收集了音乐社区对各种音乐艺术家的偏好。&lt;/p&gt;
&lt;p&gt;· 下载链接：https://webscope.sandbox.yahoo.com/catalog.php?datatype=r&lt;/p&gt;
&lt;p&gt;· 6. LastFM（Implicit）&lt;/p&gt;
&lt;p&gt;该数据集收集了Last.fm网站上2千名用户的社交网络、tagging和music artist listening信息。&lt;/p&gt;
&lt;p&gt;· 下载链接：https://grouplens.org/datasets/hetrec-2011/&lt;/p&gt;
&lt;p&gt;· 7. Milion Song Dataset&lt;/p&gt;
&lt;p&gt;Million Song数据集是一个免费的数据集，提供了一百万条当代流行音乐曲目相关的的audio features和metadata。&lt;/p&gt;
&lt;p&gt;· 下载链接：https://labrosa.ee.columbia.edu/millionsong/&lt;/p&gt;
&lt;h1&gt;Movie 电影&lt;/h1&gt;
&lt;p&gt;· 8. MovieLens&lt;/p&gt;
&lt;p&gt;GroupLens Research已经从他们的电影网站收集整理的rating数据集。&lt;/p&gt;
&lt;p&gt;· 下载链接：https://grouplens.org/datasets/movielens/&lt;/p&gt;
&lt;p&gt;· 9. Yahoo Movies&lt;/p&gt;
&lt;p&gt;该数据集包含从两个不同来源收集的歌曲的rating数据集。第一个来源是用户在与Yahoo上使用音乐服务是产生的rating数据。&lt;/p&gt;
&lt;p&gt;· 下载链接：https://webscope.sandbox.yahoo.com/catalog.php?datatype=r&lt;/p&gt;
&lt;p&gt;· 10. CiaoDVD&lt;/p&gt;
&lt;p&gt;CiaoDVD是2013年12月从http://dvd.ciao.co.uk网站上抓取的DVD类别数据集。&lt;/p&gt;
&lt;p&gt;· 下载链接：https://webscope.sandbox.yahoo.com/catalog.php?datatype=r&lt;/p&gt;
&lt;p&gt;·11. FilmTrust&lt;/p&gt;
&lt;p&gt;FilmTrust是2011年6月从整个FilmTrust网站上抓取的一个小型数据集。&lt;/p&gt;
&lt;p&gt;· 下载链接：https://www.librec.net/datasets.html&lt;/p&gt;
&lt;p&gt;· 12. Netflix&lt;/p&gt;
&lt;p&gt;这是Netflix奖竞赛中使用的官方数据集。&lt;/p&gt;
&lt;p&gt;· 下载链接：http://academictorrents.com/details/9b13183dc4d60676b773c9e2cd6de5e5542cee9a&lt;/p&gt;
&lt;h1&gt;Game 游戏&lt;/h1&gt;
&lt;p&gt;· 13. Steam Video Games&lt;/p&gt;
&lt;p&gt;这是一个用户行数据集，包含：user-id，game-title，behavior-name，value。包括“purchase”和“play”数据集。购买了，puchase的值为1，而“play”的值表示用户播放音乐的时长。&lt;/p&gt;
&lt;p&gt;· 下载链接：https://www.kaggle.com/tamber/steam-video-games/data&lt;/p&gt;
&lt;h1&gt;Jokes 笑话&lt;/h1&gt;
&lt;p&gt;· 14. Jester&lt;/p&gt;
&lt;p&gt;该笑话数据集包含来自73,496个用户，关于100个笑话的410万连续rating数据（-10.00到+10.00）&lt;/p&gt;
&lt;p&gt;· 下载链接：http://www.ieor.berkeley.edu/~goldberg/jester-data/&lt;/p&gt;
&lt;h1&gt;Food 餐饮&lt;/h1&gt;
&lt;p&gt;·15. Chicago Entree&lt;/p&gt;
&lt;p&gt;该数据集包含用户与Entree Chicago餐厅推荐系统交互的记录数据。&lt;/p&gt;
&lt;p&gt;· 下载链接：http://archive.ics.uci.edu/ml/datasets/Entree+Chicago+Recommendation+Data&lt;/p&gt;
&lt;h1&gt;Comic 动漫&lt;/h1&gt;
&lt;p&gt;·16. 动漫推荐数据库&lt;/p&gt;
&lt;p&gt;该数据集包含来自12,294个动漫的73,516个用户的用户偏好数据。每个用户都可以将动画添加到已完成的列表中并为其评分，该数据集把这些评级整理起来。&lt;/p&gt;
&lt;p&gt;· 下载链接：https://www.kaggle.com/CooperUnion/anime-recommendations-database&lt;/p&gt;
&lt;h1&gt;Other 其他数据集&lt;/h1&gt;
&lt;p&gt;· GroupLens数据集&lt;/p&gt;
&lt;p&gt;· 下载链接：https://grouplens.org/datasets/&lt;/p&gt;
&lt;p&gt;· LibRec数据集&lt;/p&gt;
&lt;p&gt;· 下载链接：https://www.librec.net/datasets.html&lt;/p&gt;
&lt;p&gt;· Yahoo Research数据集&lt;/p&gt;
&lt;p&gt;· 下载链接：https://webscope.sandbox.yahoo.com/catalog.php?datatype=r&lt;/p&gt;
&lt;p&gt;· 斯坦福大型网络数据集汇编&lt;/p&gt;
&lt;p&gt;· 下载链接：https://snap.stanford.edu/data/&lt;/p&gt;
&lt;p&gt;LibRec 开源工具提供的数据集 【数据地址：https://www.librec.net/datasets.html】&lt;/p&gt;</content><category term="Tech"></category><category term="datasets"></category><category term="recommender"></category></entry><entry><title>Pass parameters between pages by using state in Gatsby</title><link href="https://www.iamericliu.com/pass-parameters-by-state-in-Gatsby.html" rel="alternate"></link><published>2020-04-12T09:38:00+10:00</published><updated>2020-04-12T09:38:00+10:00</updated><author><name>ELaoshi</name></author><id>tag:www.iamericliu.com,2020-04-12:/pass-parameters-by-state-in-Gatsby.html</id><summary type="html">&lt;p&gt;Today , I found a way to pass parameters between pages in Gatsby.&lt;/p&gt;
&lt;p&gt;The way is using Link and state.&lt;/p&gt;
&lt;p&gt;In my home page, I have a link element
&lt;code&gt;&amp;lt;Link to="/search" state={{ searchQuery: "polo" }} &amp;gt; 
    Search
 &amp;lt;/Link&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;It pass a search query string to my search page.&lt;/p&gt;
&lt;p&gt;In search page, I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today , I found a way to pass parameters between pages in Gatsby.&lt;/p&gt;
&lt;p&gt;The way is using Link and state.&lt;/p&gt;
&lt;p&gt;In my home page, I have a link element
&lt;code&gt;&amp;lt;Link to="/search" state={{ searchQuery: "polo" }} &amp;gt; 
    Search
 &amp;lt;/Link&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;It pass a search query string to my search page.&lt;/p&gt;
&lt;p&gt;In search page, I can get this string using the following code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;const&lt;/span&gt; &lt;span class="n"&gt;SearchTemplate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;const&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt; &lt;span class="n"&gt;pageContext&lt;/span&gt; &lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;props&lt;/span&gt;

  &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;in search template&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;searchQuery&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;SearchTemplate&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Sweet!&lt;/p&gt;</content><category term="Tech"></category><category term="Gatsby"></category></entry><entry><title>ELaoshi Gatsby site publish to Netlify</title><link href="https://www.iamericliu.com/Gatsby-publish-to-netlify.html" rel="alternate"></link><published>2020-04-11T22:31:00+10:00</published><updated>2020-04-11T22:31:00+10:00</updated><author><name>ELaoshi</name></author><id>tag:www.iamericliu.com,2020-04-11:/Gatsby-publish-to-netlify.html</id><summary type="html">&lt;h1&gt;Version : 0.11.2&lt;/h1&gt;
&lt;p&gt;Update the Gatsby plugin for fetching data from woocommerce&lt;/p&gt;
&lt;p&gt;Address: &lt;a href="https://github.com/elaoshi/Gatsby-source-woocommerce"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;Gatsby demo website&lt;/h1&gt;
&lt;p&gt;I create a Gatsby demo website to show component for ecommerce website integrated with woocommerce&lt;/p&gt;
&lt;p&gt;Address : &lt;a href="https://determined-pasteur-71f9d0.netlify.com"&gt;Gatsby website&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Feature:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fetch products of a special category&lt;/li&gt;
&lt;li&gt;JS Search&lt;/li&gt;
&lt;li&gt;Checkout on woocommerce&lt;/li&gt;
&lt;li&gt;Support various …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h1&gt;Version : 0.11.2&lt;/h1&gt;
&lt;p&gt;Update the Gatsby plugin for fetching data from woocommerce&lt;/p&gt;
&lt;p&gt;Address: &lt;a href="https://github.com/elaoshi/Gatsby-source-woocommerce"&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;Gatsby demo website&lt;/h1&gt;
&lt;p&gt;I create a Gatsby demo website to show component for ecommerce website integrated with woocommerce&lt;/p&gt;
&lt;p&gt;Address : &lt;a href="https://determined-pasteur-71f9d0.netlify.com"&gt;Gatsby website&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Feature:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fetch products of a special category&lt;/li&gt;
&lt;li&gt;JS Search&lt;/li&gt;
&lt;li&gt;Checkout on woocommerce&lt;/li&gt;
&lt;li&gt;Support various products&lt;/li&gt;
&lt;li&gt;Add shopping cart&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tech"></category><category term="Gatsby"></category><category term="Netlify"></category></entry><entry><title>How to return HOME in iOS Simulator</title><link href="https://www.iamericliu.com/ios-simulator-back-to-home.html" rel="alternate"></link><published>2020-04-11T08:00:00+10:00</published><updated>2020-04-11T08:00:00+10:00</updated><author><name>ELaoshi</name></author><id>tag:www.iamericliu.com,2020-04-11:/ios-simulator-back-to-home.html</id><content type="html">&lt;h1&gt;How to return HOME in iOS Simulator&lt;/h1&gt;
&lt;p&gt;Try : &lt;/p&gt;
&lt;p&gt;Shift+Command+H&lt;/p&gt;</content><category term="Tech"></category><category term="IOS"></category><category term="Simulator"></category></entry><entry><title>Integrated Pelican website blog with Circle CI</title><link href="https://www.iamericliu.com/integrated-blog-with-circle-ci.html" rel="alternate"></link><published>2020-04-09T15:12:00+10:00</published><updated>2020-04-09T15:12:00+10:00</updated><author><name>ELaoshi</name></author><id>tag:www.iamericliu.com,2020-04-09:/integrated-blog-with-circle-ci.html</id><summary type="html">&lt;p&gt;My blog already integrated with Cricle CI&lt;/p&gt;
&lt;p&gt;Good for me to testing both in Cirecle CI and Netlify.&lt;/p&gt;
&lt;p&gt;The structure is following : &lt;/p&gt;
&lt;p&gt;v1:
&lt;img src="/images/website-structure.png" width="70%"&gt;&lt;/p&gt;
&lt;p&gt;v2:
&lt;img src="/images/website-sturcture-deploy-circleci-v2.png" alt="circle ci deploy website" width="70%"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/website-structure-circle.png" width="70%"&gt;&lt;/p&gt;
&lt;p&gt;My circle config yml v1 is : &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;jobs&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;circleci&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;3.7&lt;/span&gt;
    &lt;span class="n"&gt;dependencies&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;pre&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;upgrade&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt;
    &lt;span class="n"&gt;steps&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;checkout&lt;/span&gt;
        &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;command …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;My blog already integrated with Cricle CI&lt;/p&gt;
&lt;p&gt;Good for me to testing both in Cirecle CI and Netlify.&lt;/p&gt;
&lt;p&gt;The structure is following : &lt;/p&gt;
&lt;p&gt;v1:
&lt;img src="/images/website-structure.png" width="70%"&gt;&lt;/p&gt;
&lt;p&gt;v2:
&lt;img src="/images/website-sturcture-deploy-circleci-v2.png" alt="circle ci deploy website" width="70%"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/website-structure-circle.png" width="70%"&gt;&lt;/p&gt;
&lt;p&gt;My circle config yml v1 is : &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;jobs&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;circleci&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;3.7&lt;/span&gt;
    &lt;span class="n"&gt;dependencies&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;pre&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;upgrade&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt;
    &lt;span class="n"&gt;steps&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;checkout&lt;/span&gt;
        &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
                &lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;
                &lt;span class="n"&gt;python3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;venv&lt;/span&gt; &lt;span class="n"&gt;venv&lt;/span&gt;
                &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;venv&lt;/span&gt;&lt;span class="sr"&gt;/bin/&lt;/span&gt;&lt;span class="n"&gt;activate&lt;/span&gt;
                &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="n"&gt;requirements&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;txt&lt;/span&gt;
        &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Running&lt;/span&gt; &lt;span class="n"&gt;tests&lt;/span&gt;
                &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
                &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;venv&lt;/span&gt;&lt;span class="sr"&gt;/bin/&lt;/span&gt;&lt;span class="n"&gt;activate&lt;/span&gt;
                &lt;span class="n"&gt;pytest&lt;/span&gt;
        &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;store_artifacts&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reports&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
            &lt;span class="n"&gt;destination&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python_app&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category><category term="circle ci"></category><category term="pelican"></category></entry><entry><title>免费Mysql数据库申请</title><link href="https://www.iamericliu.com/free-mysql-space-apply-0408.html" rel="alternate"></link><published>2020-04-08T22:08:00+10:00</published><updated>2020-04-08T22:08:00+10:00</updated><author><name>ELaoshi</name></author><id>tag:www.iamericliu.com,2020-04-08:/free-mysql-space-apply-0408.html</id><summary type="html">&lt;p&gt;free mysql space for testing and developing&lt;/p&gt;</summary><content type="html">&lt;h2&gt;发现了一个 mysql 的免费空间，供大家测试使用。&lt;/h2&gt;
&lt;p&gt;I found a mysql free space , for testing and development &lt;/p&gt;
&lt;p&gt;RemoteMysql: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;    https://remotemysql.com/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;100MB 空间流量， 国内访问无限制。
可建多个数据库。基本不影响测试。 不过有一些全局函数不能用。&lt;/p&gt;
&lt;p&gt;同时配备有 phpMyAdmin ， 方便在线使用。&lt;/p&gt;
&lt;p&gt;无期限，十分推荐大家配一个手边测试使用。&lt;/p&gt;</content><category term="Tech"></category><category term="mysql"></category><category term="free"></category></entry><entry><title>Deploy Pelican website blog to Netfily</title><link href="https://www.iamericliu.com/deploy-pelican-blog-to-netfily-with-you-own-domain.html" rel="alternate"></link><published>2020-04-08T15:12:00+10:00</published><updated>2020-04-08T15:12:00+10:00</updated><author><name>ELaoshi</name></author><id>tag:www.iamericliu.com,2020-04-08:/deploy-pelican-blog-to-netfily-with-you-own-domain.html</id><summary type="html">&lt;p&gt;First we have a pelican website. Then I deploy my code to bitbucket.&lt;/p&gt;
&lt;p&gt;In my repo, need to create a &lt;code&gt;requirements.txt&lt;/code&gt; file. This is important as Netlify will look for this file to determine dependencies. In the file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;    Markdown==2.6.11&lt;/span&gt;
&lt;span class="err"&gt;    pelican==4.2.0&lt;/span&gt;
&lt;span class="err"&gt;    requests==2.18 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;First we have a pelican website. Then I deploy my code to bitbucket.&lt;/p&gt;
&lt;p&gt;In my repo, need to create a &lt;code&gt;requirements.txt&lt;/code&gt; file. This is important as Netlify will look for this file to determine dependencies. In the file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;    Markdown==2.6.11&lt;/span&gt;
&lt;span class="err"&gt;    pelican==4.2.0&lt;/span&gt;
&lt;span class="err"&gt;    requests==2.18.4&lt;/span&gt;
&lt;span class="err"&gt;    s3cmd==2.0.1&lt;/span&gt;
&lt;span class="err"&gt;    six==1.14.0&lt;/span&gt;
&lt;span class="err"&gt;    typogrify==2.0.7&lt;/span&gt;
&lt;span class="err"&gt;    pytest==4.6.9&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After then, I connect netlify with bitbucket, netlify ask me to choose my own repo to pull.&lt;/p&gt;
&lt;p&gt;Then when I config the site in netlify: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;    Build command:   pelican content -s publishconf.py&lt;/span&gt;
&lt;span class="err"&gt;    Publish directory:   output&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After that, I choose master branch to build.&lt;/p&gt;
&lt;p&gt;Finally , Click the Deploy button to build and deploy to netlify.&lt;/p&gt;
&lt;h1&gt;Point to my own domain&lt;/h1&gt;
&lt;p&gt;In setting : &lt;code&gt;Deploy -&amp;gt; Domain management&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I add a domain alias and point my domain dns to netlify . &lt;/p&gt;
&lt;p&gt;Then netlify will create a DNS panel for me to manage my domain. So sweet!&lt;/p&gt;
&lt;p&gt;After dns name server pointed to netlify, we can create HTTPS certificate by Let's Encrypt for free!&lt;/p&gt;
&lt;p&gt;Till now, my blog is already setup! Sweet!&lt;/p&gt;
&lt;h1&gt;Update content&lt;/h1&gt;
&lt;p&gt;In my docker instance, I can generate new content by running :  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;    pelican content -s publishconf.py&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then add a build "Build hooks" in "Build &amp;amp; deploy" , netfily give me a url. &lt;/p&gt;
&lt;p&gt;I set this url in bitbucket webhook, when each time content pushed to bitbucket then bitbucket will trigger a build in netfily.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bitbucket netlify webhook" src="https://www.iamericliu.com/images/bitbucket-netlify-webhook.png"&gt;&lt;/p&gt;
&lt;p&gt;Till now, when I deploy content to bitbucket and netlify will auto deploy it to my blog! Sweet!&lt;/p&gt;</content><category term="Tech"></category><category term="netfily"></category><category term="pelican"></category></entry><entry><title>Problem fixed in Mac for Docker</title><link href="https://www.iamericliu.com/docker-net-http-tls-handshake-timeout-fixed.html" rel="alternate"></link><published>2020-04-08T00:00:00+10:00</published><updated>2020-04-08T00:00:00+10:00</updated><author><name>ELaoshi</name></author><id>tag:www.iamericliu.com,2020-04-08:/docker-net-http-tls-handshake-timeout-fixed.html</id><content type="html">&lt;h1&gt;问题&lt;/h1&gt;
&lt;p&gt;在用 Docker 配置环境时，出现 Get https://registry-1.docker.io/v2/: net/http: TLS handshake timeout 连接超时的问题&lt;/p&gt;
&lt;p&gt;坐标 Sydney&lt;/p&gt;
&lt;h1&gt;解&lt;/h1&gt;
&lt;p&gt;重启 docker , 完成。 &lt;/p&gt;</content><category term="Tech"></category><category term="docker"></category></entry><entry><title>Add wordpress with cloudinary for image hosting</title><link href="https://www.iamericliu.com/add-wp-with-cloudinary-image-host.html" rel="alternate"></link><published>2019-10-09T08:00:00+11:00</published><updated>2019-10-09T08:00:00+11:00</updated><author><name>ELaoshi</name></author><id>tag:www.iamericliu.com,2019-10-09:/add-wp-with-cloudinary-image-host.html</id><summary type="html">&lt;p&gt;Hi today I will recommand the cloudinary for free hosting image CDN for your Wordpress.&lt;/p&gt;
&lt;p&gt;It works for my website: &lt;a href="https://www.whooosale.com"&gt; Release Site &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At the point when we host our files on the cloud and access them through CDN, these records conveyed from outsider servers to our server. This process saves …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hi today I will recommand the cloudinary for free hosting image CDN for your Wordpress.&lt;/p&gt;
&lt;p&gt;It works for my website: &lt;a href="https://www.whooosale.com"&gt; Release Site &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At the point when we host our files on the cloud and access them through CDN, these records conveyed from outsider servers to our server. This process saves an additional call for files and accordingly load on our own server.&lt;/p&gt;
&lt;p&gt;Cloudinary is a image hosting service which allows us to manage our images and videos. They provide both free and paid plans. Cloudinary free plan is quite good. Below is the screenshot of their free plan.&lt;/p&gt;
&lt;p&gt;Install this plugin in  &lt;a href="https://wordpress.org/plugins/cloudinary-image-management-and-manipulation-in-the-cloud-cdn/"&gt; Wordpress Link Here &lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Once you’ve activated the plugin, you’ll need to connect your Cloudinary account to WordPress.&lt;/p&gt;
&lt;p&gt;Click Connect from the Cloudinary menu item to open up the connection settings page.
Enter your “Cloudinary environment variable” in the format cloudinary://{API_Key}:{API_Secret}@{Cloud_Name}, then click save. You can find your environment variable in the "Account Details" section of the Cloudinary Console Dashboard.&lt;/p&gt;
&lt;p&gt;Once you're set up correctly, you'll see a new Cloudinary menu item in the WordPress admin panel. This is where you can configure your Cloudinary settings for WordPress. Select Global transformations to configure your Global Image and Global Video settings.&lt;/p&gt;
&lt;p&gt;From now, once you upload images from wordpress, it can be uploaded to Cloudinary automatically and start optimized your website.&lt;/p&gt;
&lt;p&gt;Thanks for reading!&lt;/p&gt;</content><category term="Tech"></category><category term="Wordpress"></category><category term="Cloudinary"></category></entry></feed>